[{"path":"https://business-science.github.io/modeltime.gluonts/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 BUSINESS SCIENCE Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"making-an-deepar-model","dir":"Articles","previous_headings":"","what":"Making an DeepAR Model","title":"Getting Started with Modeltime GluonTS","text":"Let’s get started making DeepAR Model. matter minutes, ’ll generate 7 forecasts shown . ’d like improve time series forecasting abilities, please take High-Performance Time Series Course.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"libraries","dir":"Articles","previous_headings":"","what":"Libraries","title":"Getting Started with Modeltime GluonTS","text":"Load following libraries.","code":"library(modeltime.gluonts) library(tidymodels) library(tidyverse) library(timetk)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with Modeltime GluonTS","text":"Next, set Python Environment install_gluonts(). need run one time, good go. detailed installation instructions troubleshooting guidance Installation Guide.","code":"install_gluonts()"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"time-series-data","dir":"Articles","previous_headings":"","what":"Time Series Data","title":"Getting Started with Modeltime GluonTS","text":"’ll use walmart_sales_weekly dataset, contains 7 weekly time series sales data various departments Walmart Store.  ’ll create forecast region using future_frame(). forecasting 1 week (24x7 timestamps) future.","code":"data <- walmart_sales_weekly %>%   select(id, Date, Weekly_Sales) %>%   set_names(c(\"id\", \"date\", \"value\"))  data %>%   group_by(id) %>%   plot_time_series(     date,      value,      .facet_ncol = 3,      .interactive = FALSE   ) HORIZON <- 52  new_data <- data %>%   group_by(id) %>%   future_frame(.length_out = HORIZON) %>%   ungroup()  new_data #> # A tibble: 364 × 2 #>    id    date       #>    <fct> <date>     #>  1 1_1   2012-11-02 #>  2 1_1   2012-11-09 #>  3 1_1   2012-11-16 #>  4 1_1   2012-11-23 #>  5 1_1   2012-11-30 #>  6 1_1   2012-12-07 #>  7 1_1   2012-12-14 #>  8 1_1   2012-12-21 #>  9 1_1   2012-12-28 #> 10 1_1   2013-01-04 #> # ℹ 354 more rows"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"making-a-deepar-model","dir":"Articles","previous_headings":"","what":"Making a DeepAR Model","title":"Getting Started with Modeltime GluonTS","text":"’ll create DeepAR model using deep_ar() function. univariate modeling algorithm uses Deep Learning Autoregression. select GluonTS version setting engine gluonts_deepar.","code":"model_fit_deepar <- deep_ar(   id                    = \"id\",   freq                  = \"W\",   prediction_length     = HORIZON,   lookback_length       = 2*HORIZON,   epochs                = 5 ) %>%   set_engine(\"gluonts_deepar\") %>%   fit(value ~ date + id, data)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Getting Started with Modeltime GluonTS","text":"model hand, can simply follow Modeltime Workflow generate forecast multiple time series groups. can visualize forecast plot_modeltime_forecast().","code":"modeltime_forecast_tbl <- modeltime_table(   model_fit_deepar ) %>%   modeltime_forecast(     new_data    = new_data,     actual_data = data,     keep_data   = TRUE   ) %>%   group_by(id) modeltime_forecast_tbl %>%   plot_modeltime_forecast(     .conf_interval_show = FALSE,      .facet_ncol         = 3,      .facet_scales       = \"free\",     .interactive        = FALSE   )"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"saving-and-loading-models","dir":"Articles","previous_headings":"","what":"Saving and Loading Models","title":"Getting Started with Modeltime GluonTS","text":"GluonTS models need “serialized” (fancy word saved directory contains recipe recreating models). save models, use save_gluonts_model(). Provide directory want save model. saves model files directory. can reload model R using load_gluonts_model().","code":"model_fit_deepar %>%   save_gluonts_model(path = \"deepar_model\", overwrite = TRUE) model_fit_deepar <- load_gluonts_model(\"deepar_model\")"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"take-the-high-performance-forecasting-course","dir":"Articles","previous_headings":"","what":"Take the High-Performance Forecasting Course","title":"Getting Started with Modeltime GluonTS","text":"Become forecasting expert organization  High-Performance Time Series Course","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"time-series-is-changing","dir":"Articles","previous_headings":"Take the High-Performance Forecasting Course","what":"Time Series is Changing","title":"Getting Started with Modeltime GluonTS","text":"Time series changing. Businesses now need 10,000+ time series forecasts every day. call High-Performance Time Series Forecasting System (HPTSF) - Accurate, Robust, Scalable Forecasting. High-Performance Forecasting Systems save companies improving accuracy scalability. Imagine happen career can provide organization “High-Performance Time Series Forecasting System” (HPTSF System).","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/getting-started.html","id":"how-to-learn-high-performance-time-series-forecasting","dir":"Articles","previous_headings":"Take the High-Performance Forecasting Course","what":"How to Learn High-Performance Time Series Forecasting","title":"Getting Started with Modeltime GluonTS","text":"teach build HPTFS System High-Performance Time Series Forecasting Course. learn: Time Series Machine Learning (cutting-edge) Modeltime - 30+ Models (Prophet, ARIMA, XGBoost, Random Forest, & many ) Deep Learning GluonTS (Competition Winners) Time Series Preprocessing, Noise Reduction, & Anomaly Detection Feature engineering using lagged variables & external regressors Hyperparameter Tuning Time series cross-validation Ensembling Multiple Machine Learning & Univariate Modeling Techniques (Competition Winner) Scalable Forecasting - Forecast 1000+ time series parallel . Become Time Series Expert organization. Take High-Performance Time Series Forecasting Course","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installation Guide","text":"2 key components installing modeltime.gluonts: Download R-Package, modeltime.gluonts. installs R-Bindings, allows interface GluonTS. Set Python Environment modeltime.gluonts can connect gluonts python package.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"step-1-download-install-modeltime-gluonts","dir":"Articles","previous_headings":"Installation","what":"Step 1: Download & Install Modeltime GluonTS","title":"Installation Guide","text":"Modeltime GluonTS maintained GitHub can installed using:","code":"remotes::install_github(\"business-science/modeltime.gluonts\")"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"step-2-default-python-environment-setup","dir":"Articles","previous_headings":"Installation","what":"Step 2: Default Python Environment Setup","title":"Installation Guide","text":"’ve provided helper function, install_gluonts() prepare bind python environment containing gluonts required python packages. need run one time, good go. time load modeltime.gluonts, package include environment ’s search process. happens: fresh_install: Default: FALSE. TRUE, removes previous “r-gluonts” environments, can help case errors. Caution: added packages environment prior install, packages removed. include_pytorch: Default: FALSE. TRUE, install optional Pytorch Pytorch Lightning dependencies use “torch” engine, available models deep_ar().","code":"# GluonTS Installation - Run 1st time install_gluonts(fresh_install = FALSE, include_pytorch = FALSE)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"step-3-restart-r-and-try-an-example","dir":"Articles","previous_headings":"Installation","what":"Step 3: Restart R and Try an Example","title":"Installation Guide","text":"Restart R session (RStudio, close re-open). try example.","code":"library(modeltime.gluonts) library(tidymodels) library(tidyverse)  # Fit a GluonTS DeepAR Model model_fit_deepar <- deep_ar(     id                    = \"id\",     freq                  = \"M\",     prediction_length     = 24,     lookback_length       = 48,     epochs                = 5 ) %>%     set_engine(\"gluonts_deepar\") %>%     fit(value ~ ., training(m750_splits))  # Forecast with 95% Confidence Interval modeltime_table(     model_fit_deepar ) %>%     modeltime_calibrate(new_data = testing(m750_splits)) %>%     modeltime_forecast(         new_data      = testing(m750_splits),         actual_data   = m750,         conf_interval = 0.95     ) %>%     plot_modeltime_forecast(.interactive = FALSE)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"upgrading-to-modeltime-gluonts-0-3-0","dir":"Articles","previous_headings":"","what":"Upgrading to Modeltime GluonTS >= 0.3.0","title":"Installation Guide","text":"Modeltime GluonTS 0.3.0 introduced new features available GluonTS >= 0.8.0. incorporate features, now need upgrade GluonTS. First, upgrade modeltime.gluonts: Next, recommend running install_gluonts() fresh_install = TRUE. completely replace previous “r-gluonts” python environment new one. ’s designed help reduce likelihood errors upgrading process. Optionally, can add Pytorch Backend (new feature) :","code":"remotes::install_github(\"business-science/modeltime.gluonts\") install_gluonts(fresh_install = TRUE) install_gluonts(fresh_install = TRUE, include_pytorch = TRUE)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"troubleshooting-installation","dir":"Articles","previous_headings":"","what":"Troubleshooting Installation","title":"Installation Guide","text":"Python Environment setup always fun. recommendations run issue. Check make sure Conda Miniconda available using reticulate::conda_version(). conda version returned, use reticulate::install_miniconda() install Miniconda (recommended vs full Aniconda). (re-)run install_gluonts(). Check GluonTS (Python) available using reticulate::py_module_available(\"gluonts\"). returns TRUE, installation succeeded building environment, may issues like missing C++ build tools (next). Windows 10 error: Microsoft Visual C++ required. instructions installing C++ tools needed. installation issues. Please file GitHub issue .","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"python-environment-requirements","dir":"Articles","previous_headings":"","what":"Python Environment Requirements","title":"Installation Guide","text":"modeltime.gluonts >= 0.3.0 following minimum python environment requirements. provide helper function install_gluonts() help set . recent version Python (Recommend 3.7) gluonts>=0.8.0 (required modeltime.gluonts >= 0.3.0) mxnet~=1.7 pandas numpy pathlib ujson Optional: Dependencies Pytorch: torch pytorch-lightning Test Environment: package versions tested Windows, Mac, Linux systems can used set environment: gluonts==0.8.0 mxnet~=1.7 numpy pandas==1.0.5 pathlib==1.0.1 ujson==4.0.2 torch~=1.6 pytorch-lightning~=1.1 ’s . inside Conda Virtual Environment, can use modeltime.gluonts.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"custom-python-environments","dir":"Articles","previous_headings":"","what":"Custom Python Environments","title":"Installation Guide","text":"2 main ways connect python environment modeltime.gluonts: Default GluonTS Environment Setup: proven. Modeltime GluonTS creates ‘r-gluonts’ environment python package versions tested. Custom GluonTS Environment Setup: flexible. create environment, ensure dependency requirements met, define connect .","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"method-1-modifying-the-default-environment-setup","dir":"Articles","previous_headings":"Custom Python Environments","what":"Method 1: Modifying the Default Environment Setup","title":"Installation Guide","text":"process uses Conda Package Manager set new conda environment called “r-gluonts”. ’s quick easy, importantly package versions selected work together (test developing). , can modify created.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"make-sure-you-have-conda","dir":"Articles","previous_headings":"Custom Python Environments > Method 1: Modifying the Default Environment Setup","what":"1. Make sure you have conda","title":"Installation Guide","text":"Get conda version. don’t conda, install reticulate::install_miniconda() reticulate::conda_install().","code":"reticulate::conda_version()"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"run-install_gluonts-set-up-the-default-environment","dir":"Articles","previous_headings":"Custom Python Environments > Method 1: Modifying the Default Environment Setup","what":"2. Run install_gluonts() (set up the Default Environment):","title":"Installation Guide","text":"downloads “GluonTS Stack” modeltime.gluonts package tested using places Conda environment named “r-gluonts”. run library(\"modeltime.gluonts\"), attempts use “r-gluonts” environment.","code":"modeltime.gluonts::install_gluonts()"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"optional-modifying-the-default-environment","dir":"Articles","previous_headings":"Custom Python Environments > Method 1: Modifying the Default Environment Setup","what":"3. [Optional] Modifying the Default Environment:","title":"Installation Guide","text":"can modify environment, adding python libraries needed.","code":"reticulate::py_install(     envname  = \"r-gluonts\",     packages = c(         \"sklearn\"     ),     method = \"conda\",     pip = TRUE )"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"activate-the-default-environment","dir":"Articles","previous_headings":"Custom Python Environments > Method 1: Modifying the Default Environment Setup","what":"4. Activate the Default Environment:","title":"Installation Guide","text":"time load library(modeltime.gluonts), package bind “r-gluonts” python environment default. found, automatically bind environment.","code":"library(modeltime.gluonts)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"check-the-environment","dir":"Articles","previous_headings":"Custom Python Environments > Method 1: Modifying the Default Environment Setup","what":"5. Check the Environment","title":"Installation Guide","text":"Make sure environment changed default ‘r-gluonts’ environment. can see r-gluonts environment used python path.","code":"reticulate::py_discover_config()"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"method-2-making-custom-environments","dir":"Articles","previous_headings":"Custom Python Environments","what":"Method 2: Making Custom Environments","title":"Installation Guide","text":"’s quite possible may Virtual Environment different Conda Environment prefer use. possible setting System Environment Variable named ‘GLUONTS_PYTHON’ running library(modeltime.gluonts).","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"create-a-custom-python-environment","dir":"Articles","previous_headings":"Custom Python Environments > Method 2: Making Custom Environments","what":"1. Create a Custom Python Environment","title":"Installation Guide","text":"can create environment containing python packages needed.","code":"reticulate::py_install(     envname  = \"my_gluonts_env\",     python_version = \"3.7\",     packages = c(         \"mxnet~=1.7\",         \"gluonts==0.8.0\",         \"pandas==1.0.5\",         \"numpy\",         \"pathlib==1.0.1\",         \"ujson==4.0.2\"     ),     method = \"conda\",     pip = TRUE )"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"locate-the-python-path","dir":"Articles","previous_headings":"Custom Python Environments > Method 2: Making Custom Environments","what":"2. Locate the Python Path","title":"Installation Guide","text":"locates path python executable ‘my_gluonts_env’ environment just created.","code":"library(dplyr) my_gluonts_env_python_path <- reticulate::conda_list() %>%     filter(name == \"my_gluonts_env\") %>%     pull(python)  my_gluonts_env_python_path #> \"/Users/mdancho/Library/r-miniconda/envs/my_gluonts_env/bin/python\""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"set-the-system-environment-variable","dir":"Articles","previous_headings":"Custom Python Environments > Method 2: Making Custom Environments","what":"3. Set the System Environment Variable","title":"Installation Guide","text":"Set system environment variable named ‘GLUONTS_PYTHON’ path python executable. set, loading library(modeltime.gluonts) use path activate environment. Verify ’s set.","code":"Sys.setenv(GLUONTS_PYTHON = my_gluonts_env_python_path) Sys.getenv(\"GLUONTS_PYTHON\") #> \"/Users/mdancho/Library/r-miniconda/envs/my_gluonts_env/bin/python\""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"load-modeltime-gluonts","dir":"Articles","previous_headings":"Custom Python Environments > Method 2: Making Custom Environments","what":"5. Load Modeltime GluonTS","title":"Installation Guide","text":"Running library(modeltime.gluonts) now binds custom environment.","code":"library(modeltime.gluonts)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/managing-envs.html","id":"gotcha-1-check-your-environment","dir":"Articles","previous_headings":"Custom Python Environments > Method 2: Making Custom Environments","what":"6. [Gotcha #1] Check Your Environment","title":"Installation Guide","text":"Make sure environment changed default reticulate environment. can see environment used. setting python environment done properly, see my_gluonts_env Python Path. Troubleshooting: incorrect environment shown, simply restart R Session,","code":"reticulate::py_discover_config()"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/using-gpus.html","id":"gpu-requirements","dir":"Articles","previous_headings":"","what":"GPU Requirements","title":"Using GPUs with GluonTS","text":"must : One Nvidia GPUs CUDA software properly installed Refer MXNet’s Official GPU Documentation using GPUs.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/using-gpus.html","id":"step-1-create-a-custom-gluonts-python-environment","dir":"Articles","previous_headings":"","what":"Step 1: Create a Custom GluonTS Python Environment","title":"Using GPUs with GluonTS","text":"Create Custom GluonTS Python Environment. need install version mxnet compatible CUDA software.","code":"reticulate::py_install(     envname  = \"my_gluonts_env\",     python_version = \"3.7.1\",     packages = c(         # IMPORTANT         \"mxnet-cu92\", # replace `cu92` according to your CUDA version.                  \"gluonts==0.8.0\",         \"pandas\",         \"numpy\",         \"pathlib\"     ),     method = \"conda\",     pip = TRUE )"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/using-gpus.html","id":"step-2-connect-to-the-gluonts-gpu-environment","dir":"Articles","previous_headings":"","what":"Step 2: Connect to the GluonTS GPU Environment","title":"Using GPUs with GluonTS","text":"Follow instructions set path check custom gluonts environment. need : Locate Python Path new Custom GPU-enabled Python Environment Set System Environment Variable Load Modeltime GluonTS Check Environment make sure modeltime.gluonts connecting GPU-enabled GluonTS Python Environment","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/articles/using-gpus.html","id":"step-3-begin-using-gpus-","dir":"Articles","previous_headings":"","what":"Step 3: Begin using GPUs.","title":"Using GPUs with GluonTS","text":"’re now ready start using GPUs. Just start training normal.","code":"model_fit_deepar <- deep_ar(   id                    = \"id\",   freq                  = \"M\",   prediction_length     = 24,   lookback_length       = 36,   epochs                = 10,    num_batches_per_epoch = 500,   learn_rate            = 0.001,   num_layers            = 3,   num_cells             = 80,   dropout               = 0.10 ) %>%   set_engine(\"gluonts_deepar\") %>%   fit(value ~ date + id, m750)"},{"path":"https://business-science.github.io/modeltime.gluonts/articles/using-gpus.html","id":"step-4-optional-configure-your-gpus-using-the-mxnet-context-ctx","dir":"Articles","previous_headings":"","what":"Step 4 (Optional): Configure your GPUs using the MXNet Context (CTX)","title":"Using GPUs with GluonTS","text":"One final point multiple GPUs, can configure distribute work using MXNet Context (ctx). example, two GPUs, can specify use adding set_engine().","code":"mxnet <- reticulate::import(\"mxnet\")  # Modify your set_engine()   ... %>%   set_engine(\"gluonts_deepar\", ctx = list(mxnet$gpu(0), mxnet$gpu(1)))"},{"path":"https://business-science.github.io/modeltime.gluonts/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Dancho. Author, maintainer. Business Science. Copyright holder.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dancho M (2024). modeltime.gluonts: 'GluonTS' Deep Learning. R package version 0.3.1.9000, https://github.com/business-science/modeltime.gluonts.","code":"@Manual{,   title = {modeltime.gluonts: 'GluonTS' Deep Learning},   author = {Matt Dancho},   year = {2024},   note = {R package version 0.3.1.9000},   url = {https://github.com/business-science/modeltime.gluonts}, }"},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"modeltimegluonts-","dir":"","previous_headings":"","what":"GluonTS Deep Learning","title":"GluonTS Deep Learning","text":"GluonTS Deep Learning R.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"gluonts-deep-learning-in-r","dir":"","previous_headings":"","what":"GluonTS Deep Learning in R","title":"GluonTS Deep Learning","text":"Modeltime GluonTS integrates Python GluonTS Deep Learning Library, making easy develop forecasts using Deep Learning comfortable Modeltime Forecasting Workflow.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"installation-requirements","dir":"","previous_headings":"","what":"Installation Requirements","title":"GluonTS Deep Learning","text":"Important: package maintained GitHub (CRAN). Please install GitHub version, updated latest features: detailed installation instructions troubleshooting guidance, visit Installation Guide.","code":"# Install GitHub Version  remotes::install_github(\"business-science/modeltime.gluonts\")  # Install Python Dependencies modeltime.gluonts::install_gluonts()"},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"make-your-first-deepar-model","dir":"","previous_headings":"","what":"Make Your First DeepAR Model","title":"GluonTS Deep Learning","text":"Make first deep_ar() model, connects GluonTS DeepAREstimator(). detailed walkthough, visit Getting Started Guide.","code":"library(modeltime.gluonts) library(tidymodels) library(tidyverse)  # Fit a GluonTS DeepAR Model model_fit_deepar <- deep_ar(     id                    = \"id\",     freq                  = \"M\",     prediction_length     = 24,     lookback_length       = 48,     epochs                = 5 ) %>%     set_engine(\"gluonts_deepar\") %>%     fit(value ~ ., training(m750_splits))  # Forecast with 95% Confidence Interval modeltime_table(     model_fit_deepar ) %>%     modeltime_calibrate(new_data = testing(m750_splits)) %>%     modeltime_forecast(         new_data      = testing(m750_splits),         actual_data   = m750,         conf_interval = 0.95     ) %>%     plot_modeltime_forecast(.interactive = FALSE)"},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"meet-the-modeltime-ecosystem","dir":"","previous_headings":"","what":"Meet the modeltime ecosystem","title":"GluonTS Deep Learning","text":"Learn growing ecosystem forecasting packages modeltime ecosystem growing Modeltime part growing ecosystem Modeltime forecasting packages. Modeltime (Machine Learning) Modeltime H2O (AutoML) Modeltime GluonTS (Deep Learning) Modeltime Ensemble (Blending Forecasts) Modeltime Resample (Backtesting) Timetk (Feature Engineering, Data Wrangling, Time Series Visualization)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"take-the-high-performance-forecasting-course","dir":"","previous_headings":"","what":"Take the High-Performance Forecasting Course","title":"GluonTS Deep Learning","text":"Become forecasting expert organization  High-Performance Time Series Course","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"time-series-is-changing","dir":"","previous_headings":"Take the High-Performance Forecasting Course","what":"Time Series is Changing","title":"GluonTS Deep Learning","text":"Time series changing. Businesses now need 10,000+ time series forecasts every day. call High-Performance Time Series Forecasting System (HPTSF) - Accurate, Robust, Scalable Forecasting. High-Performance Forecasting Systems save companies improving accuracy scalability. Imagine happen career can provide organization “High-Performance Time Series Forecasting System” (HPTSF System).","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/index.html","id":"how-to-learn-high-performance-time-series-forecasting","dir":"","previous_headings":"Take the High-Performance Forecasting Course","what":"How to Learn High-Performance Time Series Forecasting","title":"GluonTS Deep Learning","text":"teach build HPTFS System High-Performance Time Series Forecasting Course. learn: Time Series Machine Learning (cutting-edge) Modeltime - 30+ Models (Prophet, ARIMA, XGBoost, Random Forest, & many ) Deep Learning GluonTS (Competition Winners) Time Series Preprocessing, Noise Reduction, & Anomaly Detection Feature engineering using lagged variables & external regressors Hyperparameter Tuning Time series cross-validation Ensembling Multiple Machine Learning & Univariate Modeling Techniques (Competition Winner) Scalable Forecasting - Forecast 1000+ time series parallel . Become Time Series Expert organization. Take High-Performance Time Series Forecasting Course","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/as_pandas_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R Date or POSIXt to Pandas Timestamp — as_pandas_timestamp","title":"Convert R Date or POSIXt to Pandas Timestamp — as_pandas_timestamp","text":"Convert R Date POSIXt Pandas Timestamp","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/as_pandas_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R Date or POSIXt to Pandas Timestamp — as_pandas_timestamp","text":"","code":"as_pandas_timestamp(x, ..., pass_time_zone = FALSE)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/as_pandas_timestamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R Date or POSIXt to Pandas Timestamp — as_pandas_timestamp","text":"x Date Date Time ... Additional parameters passed Pandas Timestamp pass_time_zone Whether include time zone conversion Pandas. GluonTS work Pandas Time Zones. Default: FALSE.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/as_pandas_timestamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert R Date or POSIXt to Pandas Timestamp — as_pandas_timestamp","text":"","code":"# \\donttest{ dt <- as.Date(\"2011-01-01\") as_pandas_timestamp(dt) #> Error in pkg.env$pd$Timestamp(number_date, ...): attempt to apply non-function  dt_time <- as.POSIXct(\"2011-01-01 12:43:01\", tz = \"GMT\") as_pandas_timestamp(dt_time, pass_time_zone = TRUE) #> Warning: R time zone, GMT, missing or does not exist in pytz. Defaulting to UTC. #> Error in pkg.env$pd$Timestamp(number_date, tz = \"UTC\", ...): attempt to apply non-function # }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"General Interface for DeepAR Time Series Models — deep_ar","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"deep_ar() way generate specification DeepAR model fitting allows model created using different packages. Currently package gluonts.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"","code":"deep_ar(   mode = \"regression\",   id,   freq,   prediction_length,   lookback_length = NULL,   cell_type = NULL,   num_layers = NULL,   num_cells = NULL,   dropout = NULL,   epochs = NULL,   batch_size = NULL,   num_batches_per_epoch = NULL,   learn_rate = NULL,   learn_rate_decay_factor = NULL,   learn_rate_min = NULL,   patience = NULL,   clip_gradient = NULL,   penalty = NULL,   scale = NULL )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"mode single character string type model. possible value model \"regression\". id quoted column name tracks GluonTS FieldName \"item_id\" freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon lookback_length Number steps unroll RNN computing predictions (default: NULL, case context_length = prediction_length) cell_type Type recurrent cells use (available: 'lstm' 'gru'; default: 'lstm') num_layers Number RNN layers (default: 2) num_cells Number RNN cells layer (default: 40) dropout Dropout regularization parameter (default: 0.1) epochs Number epochs network train (default: 5). batch_size Number examples batch (default: 32). num_batches_per_epoch Number batches epoch (default: 50). learn_rate Initial learning rate (default: 10-3). learn_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). learn_rate_min Lower bound learning rate (default: 5x10-5 ). patience patience observe reducing learning rate, nonnegative integer (default: 10). clip_gradient Maximum value gradient. gradient clipped large (default: 10). penalty weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default 10-8 ). scale Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"arguments converted specific names time model fit. options arguments can set using set_engine(). left defaults (see ), values taken underlying model functions. parameters need modified, update() can used lieu recreating object scratch. model can created using fit() function using following engines: GluonTS DeepAR: \"gluonts_deepar\" (default) Pytorch: \"torch\". Requires pytorch pytorch-lightning. Install install_gluonts(include_pytorch = TRUE).","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"engine-details","dir":"Reference","previous_headings":"","what":"Engine Details","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"standardized parameter names modeltime can mapped original names engine: options can set using set_engine().","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"engine-gluonts-deepar-","dir":"Reference","previous_headings":"","what":"Engine \"gluonts_deepar\"","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"engine uses gluonts.model.deepar.DeepAREstimator(). Default values changed prevent long-running computations: epochs = 5: GluonTS uses 100 default. Required Parameters gluonts implementation several Required Parameters, user-defined. 1. ID Variable (Required): important difference parsnip models time series (even single time series) must uniquely identified ID variable. ID feature must class character factor. ID feature provided quoted expression model specification process (e.g. deep_ar(id = \"ID\") assuming column data named \"ID\"). 2. Frequency (Required): GluonTS models use Pandas Timestamp Frequency freq generate features internally. Examples: freq = \"5min\" timestamps 5-minutes apart freq = \"D\" Daily Timestamps Pandas Timestamps quite flexible. Refer Pandas Offset Aliases. 3. Prediction Length (Required): Unlike parsnip models, prediction_length required model specification fitting process. Parameters parameters gluonts.model.deepar.DeepAREstimator() can set using set_engine().","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"engine-torch-","dir":"Reference","previous_headings":"","what":"Engine \"torch\"","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"engine uses gluonts.torch.model.deepar.DeepAREstimator(). Default values changed prevent long-running computations: epochs = 5: Torch DeepAR uses 100 default. Important Engine Details special feature use pytorch_lightning training, different implementation gluonts. can access pytorch_lightning.trainer.trainer.Trainer() function via set_engine(). allows us set parameters like: Setting GPUs Modifying Pyorch Lightning Logging Checkpoints access Trainer() function parameters, simply add arguments set_engine(), get passed deepar_torch_fit_impl() (intermediate function) translates parameters Pytorch Lightning. details, Google pytorch_lightning.trainer.trainer.Trainer() function.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"fit-details","dir":"Reference","previous_headings":"","what":"Fit Details","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"following features REQUIRED available incoming data fitting process. Fit: fit(y ~ date + id, data): Includes target feature function \"date\" \"id\" feature. ID feature must pre-specified model_specification. Predict: predict(model, new_data) new_data contains column named \"date\" \"id\". ID Variable ID feature must included recipe formula fitting process. assists cataloging time series inside GluonTS ListDataset. column name must match quoted feature name specified deep_ar(id = \"id\") expects column inside data named \"id\". Date Date-Time Variable requirement date date-time variable predictor. fit() interface accepts date date-time features handles internally.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"Salinas, David, Valentin Flunkert, Jan Gasthaus. \"DeepAR: Probabilistic forecasting autoregressive recurrent networks.\" arXiv preprint arXiv:1704.04110 (2017).","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_ar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Interface for DeepAR Time Series Models — deep_ar","text":"","code":"# \\donttest{ library(tidymodels) #> ── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ── #> ✔ broom        1.0.5     ✔ recipes      1.0.9 #> ✔ dials        1.2.0     ✔ rsample      1.2.0 #> ✔ dplyr        1.1.4     ✔ tibble       3.2.1 #> ✔ ggplot2      3.4.4     ✔ tidyr        1.3.0 #> ✔ infer        1.0.5     ✔ tune         1.1.2 #> ✔ modeldata    1.2.0     ✔ workflows    1.1.3 #> ✔ parsnip      1.1.1     ✔ workflowsets 1.0.1 #> ✔ purrr        1.0.2     ✔ yardstick    1.2.0 #> ── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ── #> ✖ purrr::discard() masks scales::discard() #> ✖ dplyr::filter()  masks stats::filter() #> ✖ dplyr::lag()     masks stats::lag() #> ✖ recipes::step()  masks stats::step() #> • Learn how to get started at https://www.tidymodels.org/start/ library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ forcats   1.0.0     ✔ readr     2.1.4 #> ✔ lubridate 1.9.3     ✔ stringr   1.5.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ readr::col_factor() masks scales::col_factor() #> ✖ purrr::discard()    masks scales::discard() #> ✖ dplyr::filter()     masks stats::filter() #> ✖ stringr::fixed()    masks recipes::fixed() #> ✖ dplyr::lag()        masks stats::lag() #> ✖ readr::spec()       masks yardstick::spec() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(timetk)   # ---- MODEL SPEC ---- # - Important: Make sure *required* parameters are provided model_spec <- deep_ar(      # User Defined (Required) Parameters     id                    = \"id\",     freq                  = \"M\",     prediction_length     = 24,      # Hyper Parameters     epochs                = 1,     num_batches_per_epoch = 4 ) %>%     set_engine(\"gluonts_deepar\")  model_spec #> DeepAR Model Specification (regression) #>  #> Main Arguments: #>   id = id #>   freq = M #>   prediction_length = 24 #>   epochs = 1 #>   num_batches_per_epoch = 4 #>  #> Computational engine: gluonts_deepar  #>   # ---- TRAINING ---- # Important: Make sure the date and id features are included as regressors #  and do NOT dummy the id feature. model_fitted <- model_spec %>%     fit(value ~ date + id, m750) #> Error in pkg.env$gluonts$mx$distribution$student_t$StudentTOutput(): attempt to apply non-function  model_fitted #> Error in eval(expr, envir, enclos): object 'model_fitted' not found  # ---- PREDICT ---- # - IMPORTANT: New Data must have id and date features new_data <- tibble(     id   = factor(\"M750\"),     date = as.Date(\"2015-07-01\") )  predict(model_fitted, new_data) #> Error in eval(expr, envir, enclos): object 'model_fitted' not found # }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":null,"dir":"Reference","previous_headings":"","what":"General Interface for Deep State Time Series Models — deep_state","title":"General Interface for Deep State Time Series Models — deep_state","text":"deep_state() way generate specification DeepState Estimator fitting allows model created using different packages. Currently package gluonts.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Interface for Deep State Time Series Models — deep_state","text":"","code":"deep_state(   mode = \"regression\",   id,   freq,   prediction_length,   lookback_length = NULL,   add_trend = NULL,   cell_type = NULL,   num_layers = NULL,   num_cells = NULL,   dropout = NULL,   epochs = NULL,   batch_size = NULL,   num_batches_per_epoch = NULL,   learn_rate = NULL,   learn_rate_decay_factor = NULL,   learn_rate_min = NULL,   patience = NULL,   clip_gradient = NULL,   penalty = NULL,   scale = NULL )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Interface for Deep State Time Series Models — deep_state","text":"mode single character string type model. possible value model \"regression\". id quoted column name tracks GluonTS FieldName \"item_id\" freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon lookback_length Number steps unroll RNN computing predictions (default: NULL, case past_length = prediction_length) add_trend Flag indicate whether include trend component state-space model. Default: FALSE. cell_type Type recurrent cells use (available: 'lstm' 'gru'; default: 'lstm') num_layers Number RNN layers (default: 2) num_cells Number RNN cells layer (default: 40) dropout Dropout regularization parameter (default: 0.1) epochs Number epochs network train (default: 5). batch_size Number examples batch (default: 32). num_batches_per_epoch Number batches epoch (default: 50). learn_rate Initial learning rate (default: 10-3). learn_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). learn_rate_min Lower bound learning rate (default: 5x10-5 ). patience patience observe reducing learning rate, nonnegative integer (default: 10). clip_gradient Maximum value gradient. gradient clipped large (default: 10). penalty weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default 10-8 ). scale Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"General Interface for Deep State Time Series Models — deep_state","text":"arguments converted specific names time model fit. options arguments can set using set_engine(). left defaults (see ), values taken underlying model functions. parameters need modified, update() can used lieu recreating object scratch. model can created using fit() function using following engines: GluonTS DeepStateEstimator: \"gluonts_deepstate\" (default)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"engine-details","dir":"Reference","previous_headings":"","what":"Engine Details","title":"General Interface for Deep State Time Series Models — deep_state","text":"standardized parameter names modeltime can mapped original names engine: options can set using set_engine().","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"engine","dir":"Reference","previous_headings":"","what":"Engine","title":"General Interface for Deep State Time Series Models — deep_state","text":"gluonts_deepstate engine uses gluonts.model.deep_state.DeepStateEstimator(). Default values changed prevent long-running computations: epochs = 5: GluonTS uses 100 default. cardinality = 1: GluonTS requires user provide. can change via set_engine() Required Parameters gluonts implementation several Required Parameters, user-defined. 1. ID Variable (Required): important difference parsnip models time series (even single time series) must uniquely identified ID variable. ID feature must class character factor. ID feature provided quoted expression model specification process (e.g. deep_state(id = \"ID\") assuming column data named \"ID\"). 2. Frequency (Required): GluonTS models use Pandas Timestamp Frequency freq generate features internally. Examples: freq = \"5min\" timestamps 5-minutes apart freq = \"D\" Daily Timestamps Pandas Timestamps quite flexible. Refer Pandas Offset Aliases. 3. Prediction Length (Required): Unlike parsnip models, prediction_length required model specification fitting process.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"fit-details","dir":"Reference","previous_headings":"","what":"Fit Details","title":"General Interface for Deep State Time Series Models — deep_state","text":"following features REQUIRED available incoming data fitting process. Fit: fit(y ~ date + id, data): Includes target feature function \"date\" \"id\" feature. ID feature must pre-specified model_specification. Predict: predict(model, new_data) new_data contains column named \"date\" \"id\". ID Variable ID feature must included recipe formula fitting process. assists cataloging time series inside GluonTS ListDataset. column name must match quoted feature name specified deep_state(id = \"id\") expects column inside data named \"id\". Date Date-Time Variable requirement date date-time variable predictor. fit() interface accepts date date-time features handles internally.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"General Interface for Deep State Time Series Models — deep_state","text":"Rangapuram, Syama Sundar, et al. \"Deep state space models time series forecasting.\" Advances Neural Information Processing Systems. 2018.","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deep_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Interface for Deep State Time Series Models — deep_state","text":"","code":"# \\donttest{ library(tidymodels) library(tidyverse) library(timetk)   # ---- MODEL SPEC ---- # - Important: Make sure *required* parameters are provided model_spec <- deep_state(      # User Defined (Required) Parameters     id                    = \"id\",     freq                  = \"M\",     prediction_length     = 24,      # Hyper Parameters     epochs                = 1,     num_batches_per_epoch = 4 ) %>%     set_engine(\"gluonts_deepstate\")  model_spec #> Deep State Model Specification (regression) #>  #> Main Arguments: #>   id = id #>   freq = M #>   prediction_length = 24 #>   epochs = 1 #>   num_batches_per_epoch = 4 #>  #> Computational engine: gluonts_deepstate  #>   # ---- TRAINING ---- # Important: Make sure the date and id features are included as regressors #  and do NOT dummy the id feature. model_fitted <- model_spec %>%     fit(value ~ date + id, m750) #> Error in pkg.env$gluonts$mx$distribution$student_t$StudentTOutput(): attempt to apply non-function  model_fitted #> Error in eval(expr, envir, enclos): object 'model_fitted' not found  # ---- PREDICT ---- # - IMPORTANT: New Data must have id and date features new_data <- tibble(     id   = factor(\"M750\"),     date = as.Date(\"2015-07-01\") )  predict(model_fitted, new_data) #> Error in eval(expr, envir, enclos): object 'model_fitted' not found # }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_fit_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"GluonTS DeepAR Modeling Function (Bridge) — deepar_fit_impl","title":"GluonTS DeepAR Modeling Function (Bridge) — deepar_fit_impl","text":"GluonTS DeepAR Modeling Function (Bridge)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_fit_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GluonTS DeepAR Modeling Function (Bridge) — deepar_fit_impl","text":"","code":"deepar_fit_impl(   x,   y,   freq,   prediction_length,   id,   epochs = 5,   num_batches_per_epoch = 50,   learning_rate = 0.001,   learning_rate_decay_factor = 0.5,   patience = 10,   minimum_learning_rate = 5e-05,   clip_gradient = 10,   weight_decay = 1e-08,   init = \"xavier\",   ctx = NULL,   hybridize = TRUE,   context_length = NULL,   num_layers = 2,   num_cells = 40,   cell_type = \"lstm\",   dropout_rate = 0.1,   use_feat_dynamic_real = FALSE,   use_feat_static_cat = FALSE,   use_feat_static_real = FALSE,   cardinality = NULL,   embedding_dimension = NULL,   distr_output = \"default\",   scaling = TRUE,   lags_seq = NULL,   time_features = NULL,   num_parallel_samples = 100,   batch_size = 32,   scale_by_id = FALSE,   ... )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_fit_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GluonTS DeepAR Modeling Function (Bridge) — deepar_fit_impl","text":"x dataframe xreg (exogenous regressors) y numeric vector values fit freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon id quoted column name tracks GluonTS FieldName \"item_id\" epochs Number epochs network train (default: 5). num_batches_per_epoch Number batches epoch (default: 50). learning_rate Initial learning rate (default:  10-3 ). learning_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). patience patience observe reducing learning rate, nonnegative integer (default: 10). minimum_learning_rate Lower bound learning rate (default:  5x10-5 ). clip_gradient Maximum value gradient. gradient clipped large (default: 10). weight_decay weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default  10-8 ). init Initializer weights network (default: “xavier”). ctx mxnet CPU/GPU context. Refer using CPU/GPU mxnet documentation. (default: NULL, uses CPU) hybridize Increases efficiency using symbolic programming. (default: TRUE) context_length Number steps unroll RNN computing predictions (default: NULL, case context_length = prediction_length) num_layers Number RNN layers (default: 2) num_cells Number RNN cells layer (default: 40) cell_type Type recurrent cells use (available: 'lstm' 'gru'; default: 'lstm') dropout_rate Dropout regularization parameter (default: 0.1) use_feat_dynamic_real Whether use 'feat_dynamic_real' field data (default: FALSE) use_feat_static_cat Whether use feat_static_cat field data (default: FALSE) use_feat_static_real Whether use feat_static_real field data (default: FALSE) cardinality Number values categorical feature. must set use_feat_static_cat == TRUE (default: NULL) embedding_dimension Dimension embeddings categorical features (default: min(50, (cat+1)//2) cat cardinality) distr_output Distribution use evaluate observations sample predictions (default: StudentTOutput()) scaling Whether automatically scale target values (default: TRUE) lags_seq Indices lagged target values use inputs RNN (default: NULL, case automatically determined based freq) time_features Time features use inputs RNN (default: None, case automatically determined based freq) num_parallel_samples Number evaluation samples per time series increase parallelism inference. model optimization affect accuracy (default: 100) batch_size Number examples batch (default: 32). scale_by_id Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE) ... Additional parameters passed gluonts.model.deepar.DeepAREstimator()","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_predict_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"Bridge prediction Function for DeepAR Models — deepar_predict_impl","title":"Bridge prediction Function for DeepAR Models — deepar_predict_impl","text":"Bridge prediction Function DeepAR Models","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_predict_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bridge prediction Function for DeepAR Models — deepar_predict_impl","text":"","code":"deepar_predict_impl(object, new_data)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_predict_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bridge prediction Function for DeepAR Models — deepar_predict_impl","text":"object object class model_fit. new_data rectangular data object, data frame.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_torch_fit_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"GluonTS DeepAR (Torch) Modeling Function (Bridge) — deepar_torch_fit_impl","title":"GluonTS DeepAR (Torch) Modeling Function (Bridge) — deepar_torch_fit_impl","text":"GluonTS DeepAR (Torch) Modeling Function (Bridge)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_torch_fit_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GluonTS DeepAR (Torch) Modeling Function (Bridge) — deepar_torch_fit_impl","text":"","code":"deepar_torch_fit_impl(   x,   y,   freq,   prediction_length,   id,   epochs = 5,   context_length = NULL,   num_layers = 2,   hidden_size = 40,   num_cells = 40,   dropout_rate = 0.1,   num_feat_dynamic_real = 0,   num_feat_static_cat = 0,   num_feat_static_real = 0,   cardinality = NULL,   embedding_dimension = NULL,   distr_output = \"default\",   scaling = TRUE,   lags_seq = NULL,   time_features = NULL,   num_parallel_samples = 100,   batch_size = 32,   scale_by_id = FALSE,   ... )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepar_torch_fit_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GluonTS DeepAR (Torch) Modeling Function (Bridge) — deepar_torch_fit_impl","text":"x dataframe xreg (exogenous regressors) y numeric vector values fit freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon id quoted column name tracks GluonTS FieldName \"item_id\" epochs Number epochs network train (default: 5). context_length Number steps unroll RNN computing predictions (default: NULL, case context_length = prediction_length) num_layers Number RNN layers (default: 2) hidden_size Hidden units num_cells Number RNN cells layer (default: 40) dropout_rate Dropout regularization parameter (default: 0.1) num_feat_dynamic_real Number dynamic numeric features num_feat_static_cat Number static categorical features num_feat_static_real Number static numeric features cardinality Number values categorical feature. must set use_feat_static_cat == TRUE (default: NULL) embedding_dimension Dimension embeddings categorical features (default: min(50, (cat+1)//2) cat cardinality) distr_output Distribution use evaluate observations sample predictions (default: StudentTOutput()) scaling Whether automatically scale target values (default: TRUE) lags_seq Indices lagged target values use inputs RNN (default: NULL, case automatically determined based freq) time_features Time features use inputs RNN (default: None, case automatically determined based freq) num_parallel_samples Number evaluation samples per time series increase parallelism inference. model optimization affect accuracy (default: 100) batch_size Number examples batch (default: 32). scale_by_id Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE) ... Parameters passed pytorch_lightning.trainer.Trainer()","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepstate_fit_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"GluonTS DeepState Forecaster Modeling Function (Bridge) — deepstate_fit_impl","title":"GluonTS DeepState Forecaster Modeling Function (Bridge) — deepstate_fit_impl","text":"GluonTS DeepState Forecaster Modeling Function (Bridge)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepstate_fit_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GluonTS DeepState Forecaster Modeling Function (Bridge) — deepstate_fit_impl","text":"","code":"deepstate_fit_impl(   x,   y,   freq,   prediction_length,   id,   epochs = 5,   num_batches_per_epoch = 50,   learning_rate = 0.001,   learning_rate_decay_factor = 0.5,   patience = 10,   minimum_learning_rate = 5e-05,   clip_gradient = 10,   weight_decay = 1e-08,   init = \"xavier\",   ctx = NULL,   hybridize = TRUE,   past_length = NULL,   add_trend = FALSE,   num_layers = 2,   num_cells = 40,   cell_type = \"lstm\",   dropout_rate = 0.1,   use_feat_dynamic_real = FALSE,   use_feat_static_cat = FALSE,   cardinality = NULL,   embedding_dimension = NULL,   distr_output = \"default\",   scaling = TRUE,   time_features = NULL,   num_parallel_samples = 100,   batch_size = 32,   scale_by_id = FALSE,   ... )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepstate_fit_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GluonTS DeepState Forecaster Modeling Function (Bridge) — deepstate_fit_impl","text":"x dataframe xreg (exogenous regressors) y numeric vector values fit freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon id quoted column name tracks GluonTS FieldName \"item_id\" epochs Number epochs network train (default: 5). num_batches_per_epoch Number batches epoch (default: 50). learning_rate Initial learning rate (default:  10-3 ). learning_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). patience patience observe reducing learning rate, nonnegative integer (default: 10). minimum_learning_rate Lower bound learning rate (default:  5x10-5 ). clip_gradient Maximum value gradient. gradient clipped large (default: 10). weight_decay weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default  10-8 ). init Initializer weights network (default: “xavier”). ctx mxnet CPU/GPU context. Refer using CPU/GPU mxnet documentation. (default: NULL, uses CPU) hybridize Increases efficiency using symbolic programming. (default: TRUE) past_length Number steps unroll RNN computing predictions (default: NULL, case past_length = 4 * num_periods_to_train) add_trend Flag indicate whether include trend component state-space model. Default: FALSE. num_layers Number RNN layers (default: 2) num_cells Number RNN cells layer (default: 40) cell_type Type recurrent cells use (available: 'lstm' 'gru'; default: 'lstm') dropout_rate Dropout regularization parameter (default: 0.1) use_feat_dynamic_real Whether use 'feat_dynamic_real' field data (default: FALSE) use_feat_static_cat Whether use feat_static_cat field data (default: FALSE) cardinality Number time series. Default: 1 embedding_dimension Dimension embeddings categorical features (default: min(50, (cat+1)//2) cat cardinality) distr_output Distribution use evaluate observations sample predictions (default: StudentTOutput()) scaling Whether automatically scale target values (default: TRUE) time_features Time features use inputs RNN (default: None, case automatically determined based freq) num_parallel_samples Number evaluation samples per time series increase parallelism inference. model optimization affect accuracy (default: 100) batch_size Number examples batch (default: 32). scale_by_id Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE) ... Additional parameters passed gluonts.model.deepstate.DeepStateEstimator()","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepstate_predict_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"Bridge prediction Function for GP Forecaster Models — deepstate_predict_impl","title":"Bridge prediction Function for GP Forecaster Models — deepstate_predict_impl","text":"Bridge prediction Function GP Forecaster Models","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepstate_predict_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bridge prediction Function for GP Forecaster Models — deepstate_predict_impl","text":"","code":"deepstate_predict_impl(object, new_data)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/deepstate_predict_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bridge prediction Function for GP Forecaster Models — deepstate_predict_impl","text":"object object class model_fit. new_data rectangular data object, data frame.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gluonts-env.html","id":null,"dir":"Reference","previous_headings":"","what":"GluonTS Environment Connection Utilities — gluonts-env","title":"GluonTS Environment Connection Utilities — gluonts-env","text":"functions used testing establishing python environment connection modeltime.gluonts.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gluonts-env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GluonTS Environment Connection Utilities — gluonts-env","text":"","code":"is_gluonts_activated()  activate_gluonts()  get_python_env()  check_gluonts_dependencies()  check_pytorch_dependencies()  detect_default_gluonts_env()"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gluonts-env.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GluonTS Environment Connection Utilities — gluonts-env","text":"is_gluonts_activated(): Determines GluonTS Environment activated library(modeltime.gluonts). TRUE, good go. FALSE, connection modeltime.gluonts GluonTS Python activated. activate_gluonts(): Attempts activate connection modeltime.gluonts associated GluonTS Python Environment using reticulate::use_condaenv(required = TRUE). first looks system environment variable, 'GLUONTS_PYTHON', path python executable next looks Conda Environment named 'r-gluonts' (users ) get_python_env(): Returns configuration python environment discovered using reticulate::py_discover_config(). check_gluonts_dependencies(): Checks whether GluonTS required python dependencies present currently activated Python Environment. detect_default_gluonts_env(): Detects 'r-gluonts' python environment available. Returns tibble containing Returns NULL 'r-gluonts' environment detected","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gluonts-env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GluonTS Environment Connection Utilities — gluonts-env","text":"","code":"# \\donttest{ # Returns TRUE if GluonTS connection established on package load is_gluonts_activated() #> [1] FALSE  #  # }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":null,"dir":"Reference","previous_headings":"","what":"General Interface for GP Forecaster Time Series Models — gp_forecaster","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"gp_forecaster() way generate specification Gaussian Process (GP) Forecaster model fitting allows model created using different packages. Currently package gluonts.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"","code":"gp_forecaster(   mode = \"regression\",   id,   freq,   prediction_length,   lookback_length = NULL,   epochs = NULL,   batch_size = NULL,   num_batches_per_epoch = NULL,   learn_rate = NULL,   learn_rate_decay_factor = NULL,   learn_rate_min = NULL,   patience = NULL,   clip_gradient = NULL,   penalty = NULL,   scale = NULL )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"mode single character string type model. possible value model \"regression\". id quoted column name tracks GluonTS FieldName \"item_id\" freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon lookback_length Number steps unroll RNN computing predictions (default: NULL, case context_length = prediction_length) epochs Number epochs network train (default: 5). batch_size Number examples batch (default: 32). num_batches_per_epoch Number batches epoch (default: 50). learn_rate Initial learning rate (default: 10-3). learn_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). learn_rate_min Lower bound learning rate (default: 5x10-5 ). patience patience observe reducing learning rate, nonnegative integer (default: 10). clip_gradient Maximum value gradient. gradient clipped large (default: 10). penalty weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default 10-8 ). scale Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"arguments converted specific names time model fit. options arguments can set using set_engine(). left defaults (see ), values taken underlying model functions. parameters need modified, update() can used lieu recreating object scratch. model can created using fit() function using following engines: GluonTS GP Forecaster: \"gluonts_gp_forecaster\" (default)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":"engine-details","dir":"Reference","previous_headings":"","what":"Engine Details","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"standardized parameter names modeltime can mapped original names engine: options can set using set_engine().","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":"engine","dir":"Reference","previous_headings":"","what":"Engine","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"gluonts_gp_forecaster engine uses gluonts.model.gp_forecaster.GP ForecasterEstimator(). Default values changed prevent long-running computations: epochs = 5: GluonTS uses 100 default. cardinality = 1: GluonTS requires user provide. can change via set_engine() Required Parameters gluonts implementation several Required Parameters, user-defined. 1. ID Variable (Required): important difference parsnip models time series (even single time series) must uniquely identified ID variable. ID feature must class character factor. ID feature provided quoted expression model specification process (e.g. gp_forecaster(id = \"ID\") assuming column data named \"ID\"). 2. Frequency (Required): GluonTS models use Pandas Timestamp Frequency freq generate features internally. Examples: freq = \"5min\" timestamps 5-minutes apart freq = \"D\" Daily Timestamps Pandas Timestamps quite flexible. Refer Pandas Offset Aliases. 3. Prediction Length (Required): Unlike parsnip models, prediction_length required model specification fitting process.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":"fit-details","dir":"Reference","previous_headings":"","what":"Fit Details","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"following features REQUIRED available incoming data fitting process. Fit: fit(y ~ date + id, data): Includes target feature function \"date\" \"id\" feature. ID feature must pre-specified model_specification. Predict: predict(model, new_data) new_data contains column named \"date\" \"id\". ID Variable ID feature must included recipe formula fitting process. assists cataloging time series inside GluonTS ListDataset. column name must match quoted feature name specified gp_forecaster(id = \"id\") expects column inside data named \"id\". Date Date-Time Variable requirement date date-time variable predictor. fit() interface accepts date date-time features handles internally.","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Interface for GP Forecaster Time Series Models — gp_forecaster","text":"","code":"# \\donttest{ library(tidymodels) library(tidyverse) library(timetk)   # ---- MODEL SPEC ---- # - Important: Make sure *required* parameters are provided model_spec <- gp_forecaster(      # User Defined (Required) Parameters     id                    = \"id\",     freq                  = \"M\",     prediction_length     = 24,      # Hyper Parameters     epochs                = 1,     num_batches_per_epoch = 4 ) %>%     set_engine(\"gluonts_gp_forecaster\")  model_spec #> GP Forecaster Model Specification (regression) #>  #> Main Arguments: #>   id = id #>   freq = M #>   prediction_length = 24 #>   epochs = 1 #>   num_batches_per_epoch = 4 #>  #> Computational engine: gluonts_gp_forecaster  #>   # ---- TRAINING ---- # Important: Make sure the date and id features are included as regressors #  and do NOT dummy the id feature. model_fitted <- model_spec %>%     fit(value ~ date + id, m750) #> Error in pkg.env$gluonts$mx.kernels$`_rbf_kernel`$RBFKernelOutput(): attempt to apply non-function  model_fitted #> Error in eval(expr, envir, enclos): object 'model_fitted' not found  # ---- PREDICT ---- # - IMPORTANT: New Data must have id and date features new_data <- tibble(     id   = factor(\"M750\"),     date = as.Date(\"2015-07-01\") )  predict(model_fitted, new_data) #> Error in eval(expr, envir, enclos): object 'model_fitted' not found # }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster_fit_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"GluonTS GP Forecaster Modeling Function (Bridge) — gp_forecaster_fit_impl","title":"GluonTS GP Forecaster Modeling Function (Bridge) — gp_forecaster_fit_impl","text":"GluonTS GP Forecaster Modeling Function (Bridge)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster_fit_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GluonTS GP Forecaster Modeling Function (Bridge) — gp_forecaster_fit_impl","text":"","code":"gp_forecaster_fit_impl(   x,   y,   freq,   prediction_length,   id,   epochs = 5,   num_batches_per_epoch = 50,   learning_rate = 0.001,   learning_rate_decay_factor = 0.5,   patience = 10,   minimum_learning_rate = 5e-05,   clip_gradient = 10,   weight_decay = 1e-08,   init = \"xavier\",   ctx = NULL,   hybridize = TRUE,   context_length = NULL,   cardinality = 1,   kernel_output = NULL,   params_scaling = TRUE,   max_iter_jitter = 10,   jitter_method = \"iter\",   time_features = NULL,   num_parallel_samples = 100,   batch_size = 32,   scale_by_id = FALSE,   ... )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster_fit_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GluonTS GP Forecaster Modeling Function (Bridge) — gp_forecaster_fit_impl","text":"x dataframe xreg (exogenous regressors) y numeric vector values fit freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon id quoted column name tracks GluonTS FieldName \"item_id\" epochs Number epochs network train (default: 5). num_batches_per_epoch Number batches epoch (default: 50). learning_rate Initial learning rate (default:  10-3 ). learning_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). patience patience observe reducing learning rate, nonnegative integer (default: 10). minimum_learning_rate Lower bound learning rate (default:  5x10-5 ). clip_gradient Maximum value gradient. gradient clipped large (default: 10). weight_decay weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default  10-8 ). init Initializer weights network (default: “xavier”). ctx mxnet CPU/GPU context. Refer using CPU/GPU mxnet documentation. (default: NULL, uses CPU) hybridize Increases efficiency using symbolic programming. (default: TRUE) context_length Number steps unroll RNN computing predictions (default: NULL, case context_length = prediction_length) cardinality Number time series. Default: 1 kernel_output KernelOutput instance determine kernel subclass instantiated (default: RBFKernelOutput()). params_scaling Determines whether scale model parameters (default: True). max_iter_jitter Maximum number iterations jitter iteratively make matrix positive definite (default: 10). jitter_method Iteratively jitter method use eigenvalue decomposition depending problem size (default: \"iter\"). time_features Time features use inputs RNN (default: None, case automatically determined based freq) num_parallel_samples Number evaluation samples per time series increase parallelism inference. model optimization affect accuracy (default: 100) batch_size Number examples batch (default: 32). scale_by_id Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE) ... Additional parameters passed gluonts.model.gp_forecaster.GP ForecasterEstimator()","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster_predict_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"Bridge prediction Function for GP Forecaster Models — gp_forecaster_predict_impl","title":"Bridge prediction Function for GP Forecaster Models — gp_forecaster_predict_impl","text":"Bridge prediction Function GP Forecaster Models","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster_predict_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bridge prediction Function for GP Forecaster Models — gp_forecaster_predict_impl","text":"","code":"gp_forecaster_predict_impl(object, new_data)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/gp_forecaster_predict_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bridge prediction Function for GP Forecaster Models — gp_forecaster_predict_impl","text":"object object class model_fit. new_data rectangular data object, data frame.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/install_gluonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Install / Uninstall GluonTS — install_gluonts","title":"Install / Uninstall GluonTS — install_gluonts","text":"install_gluonts(): Installs GluonTS Probabilisitic Deep Learning Time Series Forecasting Software using reticulate::py_install(). Python Environment created named r-gluonts. loaded library(modeltime.gluonts), modeltime.gluonts R package connect r-gluonts Python environment default. See \"Details\" connecting custom python environments. fresh_install, remove prior installations \"r-gluonts\" python environment include_pytorch, install additional dependencies needed optional pytorch backend available algorithms. uninstall_gluonts(): remove \"r-gluonts\" python environment python packages","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/install_gluonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install / Uninstall GluonTS — install_gluonts","text":"","code":"install_gluonts(fresh_install = FALSE, include_pytorch = FALSE)  uninstall_gluonts()"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/install_gluonts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install / Uninstall GluonTS — install_gluonts","text":"fresh_install TRUE, remove prior installations r-glounts conda environment setup fresh installation. can useful errors appear upgrades. Default: FALSE. include_pytorch TRUE, install torch. Needed Torch implementation deep_ar(). Default: FALSE.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/install_gluonts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install / Uninstall GluonTS — install_gluonts","text":"Options Connecting Python Recommended Use Pre-Configured Python Environment: Use install_gluonts() install GluonTS Python Libraries conda environment named 'r-gluonts'. Advanced Use Custom Python Environment: running library(modeltime.gluonts), use Sys.setenv(GLUONTS_PYTHON = 'path//python') set path python executable environment 'gluonts', 'mxnet', 'numpy', 'pandas', 'pathlib' available dependencies. Package Manager Support (Python Environment) Conda Environments: Currently, install_gluonts() supports Conda Miniconda Environments. Virtual Environments: currently supported default installation method, install_gluonts(). However, can connect virtual environment created using Sys.setenv(GLUONTS_PYTHON = 'path//python') prior running library(modeltime.ensemble).","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/install_gluonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install / Uninstall GluonTS — install_gluonts","text":"","code":"if (FALSE) { install_gluonts() }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":null,"dir":"Reference","previous_headings":"","what":"General Interface for N-BEATS Time Series Models — nbeats","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"nbeats() way generate specification N-BEATS model fitting allows model created using different packages. Currently package gluonts. 2 N-Beats implementations: (1) Standard N-Beats, (2) Ensemble N-Beats.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"","code":"nbeats(   mode = \"regression\",   id,   freq,   prediction_length,   lookback_length = NULL,   loss_function = NULL,   bagging_size = NULL,   num_stacks = NULL,   num_blocks = NULL,   epochs = NULL,   batch_size = NULL,   num_batches_per_epoch = NULL,   learn_rate = NULL,   learn_rate_decay_factor = NULL,   learn_rate_min = NULL,   patience = NULL,   clip_gradient = NULL,   penalty = NULL,   scale = NULL )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"mode single character string type model. possible value model \"regression\". id quoted column name tracks GluonTS FieldName \"item_id\" freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon lookback_length Number time units condition predictions Also known 'lookback period'. Default 2 * prediction_length. loss_function loss function (also known metric) use training network. Unlike models GluonTS network use distribution. One following: \"sMAPE\", \"MASE\" \"MAPE\". default value \"MAPE\". bagging_size (Applicable Ensemble N-Beats). number models share parameter combination 'context_length' 'loss_function'. models gets different initialization random initialization. Default recommended value: 10. num_stacks number stacks network contain. Default recommended value generic mode: 30 Recommended value interpretable mode: 2 num_blocks number blocks per stack. list ints length 1 'num_stacks'. Default recommended value generic mode: 1. Recommended value interpretable mode: 3. epochs Number epochs network train (default: 5). batch_size Number examples batch (default: 32). num_batches_per_epoch Number batches epoch (default: 50). learn_rate Initial learning rate (default: 10-3). learn_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). learn_rate_min Lower bound learning rate (default: 5x10-5 ). patience patience observe reducing learning rate, nonnegative integer (default: 10). clip_gradient Maximum value gradient. gradient clipped large (default: 10). penalty weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default 10-8 ). scale Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"arguments converted specific names time model fit. options arguments can set using set_engine(). left defaults (see ), values taken underlying model functions. parameters need modified, update() can used lieu recreating object scratch. model can created using fit() function using following engines: GluonTS N-BEATS: \"gluonts_nbeats\" (default) GluonTS N-BEATS Ensemble: \"gluonts_nbeats_ensemble\"","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"engine-details","dir":"Reference","previous_headings":"","what":"Engine Details","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"standardized parameter names modeltime can mapped original names engine: options can set using set_engine().","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"engine","dir":"Reference","previous_headings":"","what":"Engine","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"gluonts_nbeats engine uses gluonts.model.n_beats.NBEATSEstimator(). Default values changed prevent long-running computations: epochs = 5: GluonTS uses 100 default. loss_function = 'sMAPE': GluonTS default uses MAPE. MAPE can suffer issues small values. Required Parameters gluonts_nbeats implementation several Required Parameters, user-defined. 1. ID Variable (Required): important difference parsnip models time series (even single time series) must uniquely identified ID variable. ID feature must class character factor. ID feature provided quoted expression model specification process (e.g. nbeats(id = \"ID\") assuming column data named \"ID\"). 2. Frequency (Required): GluonTS models use Pandas Timestamp Frequency freq generate features internally. Examples: freq = \"5min\" timestamps 5-minutes apart freq = \"D\" Daily Timestamps Pandas Timestamps quite flexible. Refer Pandas Offset Aliases. 3. Prediction Length (Required): Unlike parsnip models, prediction_length required model specification fitting process. gluonts_nbeats_ensemble engine uses gluonts.model.n_beats.NBEATSEnsembleEstimator(). Number Models Created model good, can expensive (long-running) due number models created. number models follows formula: length(lookback_length) x length(loss_function) x meta_bagging_size default values changed GluonTS implementation prevent long-running computations: epochs = 5: GluonTS uses 100 default. lookback_length = prediction_length * c(2, 4). GluonTS uses range 2:7, doubles number models created. bagging_size = 3: Averages 5 like models together. GluonTS uses 10, doubles number models created. loss_function = 'sMAPE': GluonTS uses 3 meta_loss_function = list('sMAPE', 'MASE', 'MAPE'), 3X's (triples) number models created. result : 2 x 1 x 3 = 6 models. model 5 epochs default. Required Parameters gluonts_nbeats_ensemble implementation several Required Parameters, user-defined. 1. ID Variable (Required): important difference parsnip models time series (even single time series) must uniquely identified ID variable. ID feature must class character factor. ID feature provided quoted expression model specification process (e.g. nbeats(id = \"ID\") assuming column data named \"ID\"). 2. Frequency (Required): GluonTS models use Pandas Timestamp Frequency freq generate features internally. Examples: freq = \"5min\" timestamps 5-minutes apart freq = \"D\" Daily Timestamps Pandas Timestamps quite flexible. Refer Pandas Offset Aliases. 3. Prediction Length (Required): Unlike parsnip models, prediction_length required model specification fitting process.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"fit-details","dir":"Reference","previous_headings":"","what":"Fit Details","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"following features REQUIRED available incoming data fitting process. Fit: fit(y ~ date + id, data): Includes target feature function \"date\" \"id\" feature. ID feature must pre-specified model_specification. Predict: predict(model, new_data) new_data contains column named \"date\" \"id\". ID Variable ID feature must included recipe formula fitting process. assists cataloging time series inside GluonTS ListDataset. column name must match quoted feature name specified nbeats(id = \"id\") expects column inside data named \"id\". Date Date-Time Variable requirement date date-time variable predictor. fit() interface accepts date date-time features handles internally.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"Boris N. Oreshkin, Dmitri Carpov, Nicolas Chapados, Yoshua Bengio. \"N-BEATS: Neural basis expansion analysis interpretable time series forecasting\" arXiv:1905.10437 (2019).","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Interface for N-BEATS Time Series Models — nbeats","text":"","code":"# \\donttest{ library(tidymodels) library(tidyverse) library(timetk)   # ---- MODEL SPEC ---- # - Important: Make sure *required* parameters are provided model_spec <- nbeats(      # User Defined (Required) Parameters     id                    = \"id\",     freq                  = \"M\",     prediction_length     = 24,      # Hyper Parameters     epochs                = 1,     num_batches_per_epoch = 4 ) %>%     set_engine(\"gluonts_nbeats\")  model_spec #> N-BEATS Model Specification (regression) #>  #> Main Arguments: #>   id = id #>   freq = M #>   prediction_length = 24 #>   epochs = 1 #>   num_batches_per_epoch = 4 #>  #> Computational engine: gluonts_nbeats  #>   # ---- TRAINING ---- # Important: Make sure the date and id features are included as regressors #  and do NOT dummy the id feature. model_fitted <- model_spec %>%     fit(value ~ date + id, m750) #> Error in purrr::map(., .f = function(df) {    idx <- df %>% dplyr::pull(!!date_var_expr)    val <- df %>% dplyr::pull(!!value_var_expr)    grp <- df %>% dplyr::pull(!!id_var_expr)    reticulate::dict(start = as_pandas_timestamp(idx[1], freq = freq),         target = pkg.env$np$array(val), item_id = as.character(grp[1]))}): ℹ In index: 1. #> Caused by error in `pkg.env$pd$Timestamp()`: #> ! attempt to apply non-function  model_fitted #> Error in eval(expr, envir, enclos): object 'model_fitted' not found  # ---- PREDICT ---- # - IMPORTANT: New Data must have id and date features new_data <- tibble(     id   = factor(\"M750\"),     date = as.Date(\"2015-07-01\") )  predict(model_fitted, new_data) #> Error in eval(expr, envir, enclos): object 'model_fitted' not found # }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_ensemble_fit_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"GluonTS N-BEATS ENSEMBLE Modeling Function (Bridge) — nbeats_ensemble_fit_impl","title":"GluonTS N-BEATS ENSEMBLE Modeling Function (Bridge) — nbeats_ensemble_fit_impl","text":"GluonTS N-BEATS ENSEMBLE Modeling Function (Bridge)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_ensemble_fit_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GluonTS N-BEATS ENSEMBLE Modeling Function (Bridge) — nbeats_ensemble_fit_impl","text":"","code":"nbeats_ensemble_fit_impl(   x,   y,   freq,   prediction_length,   id,   epochs = 5,   batch_size = 32,   num_batches_per_epoch = 50,   learning_rate = 0.001,   learning_rate_decay_factor = 0.5,   patience = 10,   minimum_learning_rate = 5e-05,   clip_gradient = 10,   weight_decay = 1e-08,   init = \"xavier\",   ctx = NULL,   hybridize = TRUE,   meta_context_length = prediction_length * c(2, 4),   meta_loss_function = list(\"sMAPE\"),   meta_bagging_size = 3,   num_stacks = 30,   num_blocks = list(1),   widths = list(512),   sharing = list(FALSE),   expansion_coefficient_lengths = list(32),   stack_types = list(\"G\"),   scale_by_id = TRUE,   ... )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_ensemble_fit_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GluonTS N-BEATS ENSEMBLE Modeling Function (Bridge) — nbeats_ensemble_fit_impl","text":"x dataframe xreg (exogenous regressors) y numeric vector values fit freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon id quoted column name tracks GluonTS FieldName \"item_id\" epochs Number epochs network train (default: 5). batch_size Number examples batch (default: 32). num_batches_per_epoch Number batches epoch (default: 50). learning_rate Initial learning rate (default:  10-3 ). learning_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). patience patience observe reducing learning rate, nonnegative integer (default: 10). minimum_learning_rate Lower bound learning rate (default:  5x10-5 ). clip_gradient Maximum value gradient. gradient clipped large (default: 10). weight_decay weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default  10-8 ). init Initializer weights network (default: “xavier”). ctx mxnet CPU/GPU context. Refer using CPU/GPU mxnet documentation. (default: NULL, uses CPU) hybridize Increases efficiency using symbolic programming. (default: TRUE) meta_context_length different 'context_length' (also known 'lookback period') use training models. 'context_length' number time units condition predictions. Default recommended value: list(multiplier * prediction_length multiplier range(2, 7)) meta_loss_function different 'loss_function' (also known metric) use training models. Unlike models GluonTS network use distribution. Default recommended value: list(\"sMAPE\", \"MASE\", \"MAPE\") meta_bagging_size number models share parameter combination 'context_length' 'loss_function'. models gets different initialization random initialization. Default (3). Recommended value: 10 num_stacks number stacks network contain. Default recommended value generic mode: 30 Recommended value interpretable mode: 2 num_blocks number blocks per stack. list ints length 1 'num_stacks'. Default recommended value generic mode: 1. Recommended value interpretable mode: 3. widths Widths fully connected layers ReLu activation blocks. list ints length 1 'num_stacks'. Default recommended value generic mode: list(512) Recommended value interpretable mode: list(256, 2048) sharing Whether weights shared blocks per stack. list ints length 1 'num_stacks'. Default recommended value generic mode: list(FALSE) Recommended value interpretable mode: list(TRUE) expansion_coefficient_lengths type \"G\" (generic), length expansion coefficient. type \"T\" (trend), corresponds degree polynomial. type \"S\" (seasonal) used. list ints length 1 'num_stacks'. Default value generic mode: list(32) Recommended value interpretable mode: list(3) stack_types One following values: \"G\" (generic), \"S\" (seasonal) \"T\" (trend). list strings length 1 'num_stacks'. Default recommended value generic mode: list(\"G\") Recommended value interpretable mode: list(\"T\",\"S\") scale_by_id Scales numeric data group using mean = 0, standard deviation = 1 transformation. (default: FALSE) ... Additional Arguments passed gluonts.model.n_beats.NBEATSEnsembleEstimator()","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_ensemble_fit_impl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GluonTS N-BEATS ENSEMBLE Modeling Function (Bridge) — nbeats_ensemble_fit_impl","text":"total number models used : meta_context_length x meta_loss_function x meta_bagging_size","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_ensemble_predict_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"Bridge prediction Function for N-BEATS ENSEMBLE Models — nbeats_ensemble_predict_impl","title":"Bridge prediction Function for N-BEATS ENSEMBLE Models — nbeats_ensemble_predict_impl","text":"Bridge prediction Function N-BEATS ENSEMBLE Models","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_ensemble_predict_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bridge prediction Function for N-BEATS ENSEMBLE Models — nbeats_ensemble_predict_impl","text":"","code":"nbeats_ensemble_predict_impl(object, new_data)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_ensemble_predict_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bridge prediction Function for N-BEATS ENSEMBLE Models — nbeats_ensemble_predict_impl","text":"object object class model_fit. new_data rectangular data object, data frame.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_fit_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"GluonTS N-BEATS Modeling Function (Bridge) — nbeats_fit_impl","title":"GluonTS N-BEATS Modeling Function (Bridge) — nbeats_fit_impl","text":"GluonTS N-BEATS Modeling Function (Bridge)","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_fit_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GluonTS N-BEATS Modeling Function (Bridge) — nbeats_fit_impl","text":"","code":"nbeats_fit_impl(   x,   y,   freq,   prediction_length,   id,   epochs = 5,   batch_size = 32,   num_batches_per_epoch = 50,   learning_rate = 0.001,   learning_rate_decay_factor = 0.5,   patience = 10,   minimum_learning_rate = 5e-05,   clip_gradient = 10,   weight_decay = 1e-08,   init = \"xavier\",   ctx = NULL,   hybridize = TRUE,   context_length = NULL,   loss_function = \"sMAPE\",   num_stacks = 30,   num_blocks = list(1),   widths = list(512),   sharing = list(FALSE),   expansion_coefficient_lengths = list(32),   stack_types = list(\"G\"),   scale_by_id = FALSE,   ... )"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_fit_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GluonTS N-BEATS Modeling Function (Bridge) — nbeats_fit_impl","text":"x dataframe xreg (exogenous regressors) y numeric vector values fit freq pandas timeseries frequency \"5min\" 5-minutes \"D\" daily. Refer Pandas Offset Aliases. prediction_length Numeric value indicating length prediction horizon id quoted column name tracks GluonTS FieldName \"item_id\" epochs Number epochs network train (default: 5). batch_size Number examples batch (default: 32). num_batches_per_epoch Number batches epoch (default: 50). learning_rate Initial learning rate (default:  10-3 ). learning_rate_decay_factor Factor (0 1) decrease learning rate (default: 0.5). patience patience observe reducing learning rate, nonnegative integer (default: 10). minimum_learning_rate Lower bound learning rate (default:  5x10-5 ). clip_gradient Maximum value gradient. gradient clipped large (default: 10). weight_decay weight decay (L2 regularization) coefficient. Modifies objective adding penalty large weights (default  10-8 ). init Initializer weights network (default: “xavier”). ctx mxnet CPU/GPU context. Refer using CPU/GPU mxnet documentation. (default: NULL, uses CPU) hybridize Increases efficiency using symbolic programming. (default: TRUE) context_length Number time units condition predictions Also known 'lookback period'. Default 2 * prediction_length loss_function loss function (also known metric) use training network. Unlike models GluonTS network use distribution. One following: \"sMAPE\", \"MASE\" \"MAPE\". default value \"MAPE\". num_stacks number stacks network contain. Default recommended value generic mode: 30 Recommended value interpretable mode: 2 num_blocks number blocks per stack. list ints length 1 'num_stacks'. Default recommended value generic mode: 1. Recommended value interpretable mode: 3. widths Widths fully connected layers ReLu activation blocks. list ints length 1 'num_stacks'. Default recommended value generic mode: list(512) Recommended value interpretable mode: list(256, 2048) sharing Whether weights shared blocks per stack. list ints length 1 'num_stacks'. Default recommended value generic mode: list(FALSE) Recommended value interpretable mode: list(TRUE) expansion_coefficient_lengths type \"G\" (generic), length expansion coefficient. type \"T\" (trend), corresponds degree polynomial. type \"S\" (seasonal) used. list ints length 1 'num_stacks'. Default value generic mode: list(32) Recommended value interpretable mode: list(3) stack_types One following values: \"G\" (generic), \"S\" (seasonal) \"T\" (trend). list strings length 1 'num_stacks'. Default recommended value generic mode: list(\"G\") Recommended value interpretable mode: list(\"T\",\"S\") scale_by_id Scales numeric data id group using mean = 0, standard deviation = 1 transformation. (default: FALSE) ... Additional Arguments passed gluonts.model.n_beats.NBEATSEstimator()","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Tuning Parameters for NBEATS Models — nbeats_params","title":"Tuning Parameters for NBEATS Models — nbeats_params","text":"Tuning Parameters NBEATS Models","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tuning Parameters for NBEATS Models — nbeats_params","text":"","code":"num_stacks(range = c(2, 100), trans = NULL)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tuning Parameters for NBEATS Models — nbeats_params","text":"range two-element vector holding defaults smallest largest possible values, respectively. transformation specified, values transformed units. trans trans object scales package, scales::log10_trans() scales::reciprocal_trans(). provided, default used matches units used range. transformation, NULL.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tuning Parameters for NBEATS Models — nbeats_params","text":"main parameters NBEATS models : num_stacks: number stacks network contain.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_predict_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"Bridge prediction Function for N-BEATS Models — nbeats_predict_impl","title":"Bridge prediction Function for N-BEATS Models — nbeats_predict_impl","text":"Bridge prediction Function N-BEATS Models","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_predict_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bridge prediction Function for N-BEATS Models — nbeats_predict_impl","text":"","code":"nbeats_predict_impl(object, new_data)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/nbeats_predict_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bridge prediction Function for N-BEATS Models — nbeats_predict_impl","text":"object object class model_fit. new_data rectangular data object, data frame.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/save_gluonts_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Saving and Loading GluonTS Models — save_gluonts_model","title":"Saving and Loading GluonTS Models — save_gluonts_model","text":"GluonTS models require special storage process saves / loads recipe used recreate model / directory user defines.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/save_gluonts_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saving and Loading GluonTS Models — save_gluonts_model","text":"","code":"save_gluonts_model(object, path, overwrite = FALSE)  load_gluonts_model(path)"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/save_gluonts_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saving and Loading GluonTS Models — save_gluonts_model","text":"object fitted model object path directory store GluonTS model files overwrite Whether allow overwriting GluonTS model's directory. Default: FALSE.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/save_gluonts_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saving and Loading GluonTS Models — save_gluonts_model","text":"","code":"if (FALSE) { library(tidymodels) library(tidyverse) library(timetk)  model_fit <- nbeats(      # User Defined (Required) Parameters     id                    = \"id\",     freq                  = \"M\",     prediction_length     = 24,      # Hyper Parameters     epochs                = 1,     num_batches_per_epoch = 4 ) %>%     set_engine(\"gluonts_nbeats\") %>%     fit(value ~ date + id, m750)  # Saves the related files needed to recreate the model model_fit %>% save_gluonts_model(path = \"/dir_nbeats_model/\")  # Loads the model load_gluonts_model(path = \"/dir_nbeats_model/\")  }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"sym() creates symbol string syms() creates list symbols character vector. enquo() enquos() delay execution one several function arguments. enquo() returns single quoted expression, like blueprint delayed computation. enquos() returns list quoted expressions. expr() quotes new expression locally. mostly useful build new expressions around arguments captured enquo() enquos(): expr(mean(!!enquo(arg), na.rm = TRUE)). as_name() transforms quoted variable name string. Supplying something else quoted variable name error. unlike as_label() also returns single string supports kind R object input, including quoted function calls vectors. purpose summarise object single label. label often suitable default name. know quoted expression contains (instance expressions captured enquo() variable name, call function, unquoted constant), use as_label(). know quoted simple variable name, like enforce , use as_name(). learn tidy eval use tools, visit https://tidyeval.tidyverse.org Metaprogramming section Advanced R.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/to_gluon_list_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data frame to a GluonTS ListDataset — to_gluon_list_dataset","title":"Convert a data frame to a GluonTS ListDataset — to_gluon_list_dataset","text":"ListDataset format required GluonTS. function simplifies creating GluonTS ListDataset.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/to_gluon_list_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data frame to a GluonTS ListDataset — to_gluon_list_dataset","text":"","code":"to_gluon_list_dataset(data, date_var, value_var, id_var = NULL, freq = \"D\")"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/to_gluon_list_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data frame to a GluonTS ListDataset — to_gluon_list_dataset","text":"data data.frame date_var date column (Timestamps) value_var value column (Target) id_var Time Series ID column tracking time series GluonTS freq Pandas Timestamp Frequency.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/to_gluon_list_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data frame to a GluonTS ListDataset — to_gluon_list_dataset","text":"","code":"# \\donttest{ library(timetk)  m4_daily %>%     to_gluon_list_dataset(         date_var  = date,         value_var = value,         id_var    = id,         freq      = \"D\"     ) #> Error in purrr::map(., .f = function(df) {    idx <- df %>% dplyr::pull(!!date_var_expr)    val <- df %>% dplyr::pull(!!value_var_expr)    grp <- df %>% dplyr::pull(!!id_var_expr)    reticulate::dict(start = as_pandas_timestamp(idx[1], freq = freq),         target = pkg.env$np$array(val), item_id = as.character(grp[1]))}): ℹ In index: 1. #> Caused by error in `pkg.env$pd$Timestamp()`: #> ! attempt to apply non-function # }"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/trainer_params.html","id":null,"dir":"Reference","previous_headings":"","what":"General Tuning Parameters for GluonTS Trainers (All Models) — trainer_params","title":"General Tuning Parameters for GluonTS Trainers (All Models) — trainer_params","text":"parameters part gluonts.mx.trainer.Trainer() function.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/trainer_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Tuning Parameters for GluonTS Trainers (All Models) — trainer_params","text":"","code":"lookback_length(range = c(dials::unknown(), dials::unknown()), trans = NULL)  num_batches_per_epoch(range = c(2, 100), trans = NULL)  learn_rate_decay_factor(range = c(0, 1), trans = NULL)  scale_values(values = c(TRUE, FALSE))"},{"path":"https://business-science.github.io/modeltime.gluonts/reference/trainer_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Tuning Parameters for GluonTS Trainers (All Models) — trainer_params","text":"range two-element vector holding defaults smallest largest possible values, respectively. transformation specified, values transformed units. trans trans object scales package, scales::log10_trans() scales::reciprocal_trans(). provided, default used matches units used range. transformation, NULL. values character string possible values.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/reference/trainer_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"General Tuning Parameters for GluonTS Trainers (All Models) — trainer_params","text":"main parameters GluonTS Model Training : epochs: number iterations training. See dials::epochs(). num_batches_per_epoch: Number batches epoch. learn_rate: rate learning changed. See dials::learn_rate(). learn_rate_decay_factor: Factor decrease learning rate. penalty: weight decay (L2 regularization) coefficient. See dials::penalty(). Additional useful parameters added Modeltime : lookback_length: Number time units condition predictions. scale_values: Scales numeric data `id' group using mean = 0, standard deviation = 1 transformation.","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"support-for-gluonts-and-pytorch-backend-0-3-0","dir":"Changelog","previous_headings":"","what":"Support for GluonTS 0.8.0 and Pytorch Backend:","title":"modeltime.gluonts 0.3.0","text":"Modeltime GluonTS now support gluonts 0.8.0. Simply run install_gluonts() upgrade. upgraded support makes modeltime.gluonts incompatible earlier versions GluonTS (e.g. gluonts 0.6.3). solution upgrade gluonts 0.8.0, requires: gluonts==0.8.0 mxnet~=1.7 Additionally, GluonTS 0.8.0 now supports pytorch backend. Use install_gluonts(include_pytorch = TRUE) simplify installation PyTorch backend. Pytorch backend requirements: torch~=1.6.0 pytorch-lightning~=1.1","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"pytorch-deepar-0-3-0","dir":"Changelog","previous_headings":"New Algorithms","what":"Pytorch DeepAR","title":"modeltime.gluonts 0.3.0","text":"new engine added deep_ar() enables Pytorch backend using set_engine(\"torch\"). requires Python packages pytorch pytorch-lightning. Use install_gluonts(include_pytorch = TRUE) simplify installation.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"gp-forecaster-algorithm-0-3-0","dir":"Changelog","previous_headings":"New Algorithms","what":"GP Forecaster Algorithm","title":"modeltime.gluonts 0.3.0","text":"new function, gp_forecaster(), integrates Gaussian Process Estimator GluonTS.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"deep-state-algorithm-0-3-0","dir":"Changelog","previous_headings":"New Algorithms","what":"Deep State Algorithm","title":"modeltime.gluonts 0.3.0","text":"new function, deep_state(), integrates Deep State Estimator GluonTS.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"tutorials-0-3-0","dir":"Changelog","previous_headings":"","what":"Tutorials","title":"modeltime.gluonts 0.3.0","text":"’ve updated Installation Guide. includes revised requirements installation, upgrading modeltime.gluonts >= 0.3.0, troubleshooting installation, python environment requirements, custom python environments. ’ve updated Getting Started Guide go DeepAR example. ’ve update GPU Setup Instructions cover Modeltime >=0.3.0.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"modeltime.gluonts 0.3.0","text":"fresh_install: TRUE, remove prior installations r-glounts conda environment setup fresh installation. can useful errors appear upgrades. Default: FALSE. include_pytorch: TRUE, install torch. Needed Torch implementation deep_ar(). Default: FALSE.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"modeltime.gluonts 0.3.0","text":"GluonTS <= 0.8.0. modeltime.gluonts package version >= 0.2.2.9000 compatible gluonts < 0.8.0. fix, simply upgrade gluonts 0.8.0.","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"dials-params-0-2-2","dir":"Changelog","previous_headings":"","what":"Dials Params","title":"modeltime.gluonts 0.2.2","text":"NBEATS Models: Adding Dials helpers #14","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"modeltimegluonts-021","dir":"Changelog","previous_headings":"","what":"modeltime.gluonts 0.2.1","title":"modeltime.gluonts 0.2.1","text":"Improvements made connect GluonTS Python Environment Startup.","code":""},{"path":[]},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"new-vignettes-0-2-0","dir":"Changelog","previous_headings":"","what":"New Vignettes","title":"modeltime.gluonts 0.2.0","text":"Managing GluonTS Environments Using GPUs GluonTS","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"modeltime.gluonts 0.2.0","text":"Internal Scaling Group: significant testing appears data sets return better results data scaled time series “id” (group). help facilitate , new option available scale id: scale = TRUE. Custom Python Environments: Provide option setting Custom Python Environment supplying GLUONTS_PYTHON environment variable. running library(modeltime.gluonts) use Sys.setenv(GLUONTS_PYTHON = 'path//python') set path python executable Conda Virtual Environment ‘gluonts’, ‘mxnet’, ‘numpy’, ‘pandas’ ‘pathlib’ available dependencies.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"fixes--improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Fixes & Improvements","title":"modeltime.gluonts 0.2.0","text":"GluonTS 0.6.3 Upgrade: install_gluonts() now uses gluonts==0.6.3. upgrade improves forecast accuracy. CRAN Comment - Add SystemRequirements: GluonTS. CRAN Comment - Fix .onLoad message provide options configuring Python Environment.","code":""},{"path":"https://business-science.github.io/modeltime.gluonts/news/index.html","id":"modeltimegluonts-010","dir":"Changelog","previous_headings":"","what":"modeltime.gluonts 0.1.0","title":"modeltime.gluonts 0.1.0","text":"CRAN release: 2020-11-30 Models: Initial Release incorporates 2 GluonTS Algorithms: deep_ar(): Integrates GluonTS DeepAREstimator nbeats(): Integrates N-BEATS & N-BEATS Ensemble Estimators New Vignette: Getting Started Website: Modeltime GluonTS","code":""}]
